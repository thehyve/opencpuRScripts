// Copyright 2014 Janssen Research & Development, LLC.
//
// This file is part of tranSMART R Client: R package allowing access to
// tranSMART's data via its RESTful API.
//
// This program is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your
// option) any later version, along with the following terms:
//
//   1. You may convey a work based on this program in accordance with
//      section 5, provided that you retain the above notices.
//   2. You may convey verbatim copies of this program code as you receive
//      it, in any medium, provided that you retain the above notices.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
// Public License for more details.
//
// You should have received a copy of the GNU General Public License along
// with this program. If not, see <http://www.gnu.org/licenses/>.

package highdim;

option java_package = "org.transmartproject.rest.protobuf";
option java_outer_classname = "HighDimProtos";

//command to compile this file, from the transmart-rest-api base folder:
//protoc --java_out=src/java src/protobuf/highdim/highdim.proto
message HighDimHeader {

    repeated Assay assay = 1;
    repeated ColumnSpec columnSpec = 2;
}

message ColumnSpec {
    enum ColumnType { DOUBLE = 1; STRING = 2; }

    required string name = 1;
    required ColumnType type = 2;
}

message Assay {
    required int64 assayId = 1;
    required string patientId = 2;
    optional string sampleTypeName = 3;
    optional string timepointName = 4;
    optional string tissueTypeName = 5;
    optional string platform = 6;
    optional string sampleCode = 7;
}

// One Row per bioMarker/label
message Row {
    required string label = 1;
    optional string bioMarker = 2;
    // A ColumnValue per column (as given by the used projection).
    // For single-column projections such as zscore/default_real/etc this has only one entry.
    // Each ColumnValue has a corresponding ColumnSpec entry in the header.
    repeated ColumnValue value = 3;
}

message ColumnValue {
    // Only ONE of these should be set!
    // The type that is set must correspond to that indicated in the corresponding ColumnType for this column in the header.
    // Every value corresponds to one assay (matching the order in the header), there are as many values as there are assays
    repeated double doubleValue = 1 [packed=true];
    repeated string stringValue = 2;
}
